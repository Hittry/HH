[{"/home/alexander/WebstormProjects/HH/client/src/index.js":"1","/home/alexander/WebstormProjects/HH/client/src/App.js":"2","/home/alexander/WebstormProjects/HH/client/src/reportWebVitals.js":"3","/home/alexander/WebstormProjects/HH/client/src/routes.js":"4","/home/alexander/WebstormProjects/HH/client/src/pages/DescriptionPage.js":"5","/home/alexander/WebstormProjects/HH/client/src/pages/AuthPage.js":"6","/home/alexander/WebstormProjects/HH/client/src/pages/FindPage.js":"7","/home/alexander/WebstormProjects/HH/client/src/hooks/http.hook.js":"8","/home/alexander/WebstormProjects/HH/client/src/hooks/msg.hook.js":"9","/home/alexander/WebstormProjects/HH/client/src/hooks/auth.hook.js":"10","/home/alexander/WebstormProjects/HH/client/src/context/AuthContext.js":"11","/home/alexander/WebstormProjects/HH/client/src/components/Navbar.js":"12","/home/alexander/WebstormProjects/HH/client/src/pages/HomePage.js":"13","/home/alexander/WebstormProjects/HH/client/src/pages/AboutPage.js":"14","/home/alexander/WebstormProjects/HH/client/src/pages/VacantionPage.js":"15","/home/alexander/WebstormProjects/HH/client/src/components/NavNotAuth.js":"16","/home/alexander/WebstormProjects/HH/client/src/components/Loader.js":"17","/home/alexander/WebstormProjects/HH/client/src/components/State.js":"18","/home/alexander/WebstormProjects/HH/client/src/components/NewLoader.js":"19","/home/alexander/WebstormProjects/HH/client/src/pages/ChangePage.js":"20","/home/alexander/WebstormProjects/HH/client/src/pages/InfoPage.js":"21","/home/alexander/WebstormProjects/HH/client/src/pages/DetailPage.js":"22","/home/alexander/WebstormProjects/HH/client/src/pages/ChooseProf.js":"23","/home/alexander/WebstormProjects/HH/client/src/pages/ProfessorPage.js":"24","/home/alexander/WebstormProjects/HH/client/src/pages/RatingPage.js":"25"},{"size":500,"mtime":1607422960211,"results":"26","hashOfConfig":"27"},{"size":1011,"mtime":1607470877411,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1607422960211,"results":"29","hashOfConfig":"27"},{"size":2518,"mtime":1608016058584,"results":"30","hashOfConfig":"27"},{"size":3915,"mtime":1607588397573,"results":"31","hashOfConfig":"27"},{"size":3780,"mtime":1607589800862,"results":"32","hashOfConfig":"27"},{"size":2170,"mtime":1607583761617,"results":"33","hashOfConfig":"27"},{"size":1088,"mtime":1607533811564,"results":"34","hashOfConfig":"27"},{"size":195,"mtime":1607432100161,"results":"35","hashOfConfig":"27"},{"size":880,"mtime":1608016562906,"results":"36","hashOfConfig":"27"},{"size":195,"mtime":1607436710652,"results":"37","hashOfConfig":"27"},{"size":1341,"mtime":1608018261482,"results":"38","hashOfConfig":"27"},{"size":215,"mtime":1607585886564,"results":"39","hashOfConfig":"27"},{"size":187,"mtime":1608017115391,"results":"40","hashOfConfig":"27"},{"size":746,"mtime":1607585886596,"results":"41","hashOfConfig":"27"},{"size":822,"mtime":1607588708123,"results":"42","hashOfConfig":"27"},{"size":1360,"mtime":1607585886604,"results":"43","hashOfConfig":"27"},{"size":588,"mtime":1608018339636,"results":"44","hashOfConfig":"27"},{"size":1543,"mtime":1607585886628,"results":"45","hashOfConfig":"27"},{"size":3066,"mtime":1607504652489,"results":"46","hashOfConfig":"27"},{"size":3754,"mtime":1607585886552,"results":"47","hashOfConfig":"27"},{"size":1002,"mtime":1607585886572,"results":"48","hashOfConfig":"27"},{"size":1027,"mtime":1607584286475,"results":"49","hashOfConfig":"27"},{"size":1914,"mtime":1607584286459,"results":"50","hashOfConfig":"27"},{"size":2325,"mtime":1607588879672,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"19k5jfx",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/alexander/WebstormProjects/HH/client/src/index.js",[],["109","110"],"/home/alexander/WebstormProjects/HH/client/src/App.js",[],"/home/alexander/WebstormProjects/HH/client/src/reportWebVitals.js",[],"/home/alexander/WebstormProjects/HH/client/src/routes.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/DescriptionPage.js",["111"],"import React, {useState, useEffect, useContext} from 'react'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {useMessage} from \"../hooks/msg.hook\";\n\nexport const DescriptionPage = () => {\n    const {error, request, clearError, result} = useHttp()\n    const msg = useMessage()\n    useEffect(() =>{\n        msg(result)\n        msg(error)\n        clearError()\n    },[error, msg, clearError, result])\n    const auth = useContext(AuthContext)\n    const [vac, setVac] = useState(\n        {username: '',prof: '', exp: '', phone: '', education: '', rate: ''}\n    )\n\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n    const changeHead = event =>{\n        setVac({...vac, [event.target.name]: event.target.value})\n    }\n    const pressHead = async () => {\n        try {\n            const data = await request('/api/descr/exp', 'POST', {...vac}, {\n                Authorization: `Bearer ${auth.token}`\n            })\n        } catch (e) {\n        }\n    }\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\">\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите имя пользователя\"\n                        id=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        value={vac.username}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"username\">Введите имя пользователя</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите описание\"\n                        id=\"prof\"\n                        type=\"text\"\n                        name=\"prof\"\n                        value={vac.prof}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"prof\">Введите профессию</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите описание\"\n                        id=\"exp\"\n                        type=\"text\"\n                        name=\"exp\"\n                        value={vac.exp}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"exp\">Введите описание</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите номер телефона\"\n                        id=\"phone\"\n                        type=\"text\"\n                        name=\"phone\"\n                        value={vac.phone}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"phone\">Введите номер телефона</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите образование\"\n                        id=\"education\"\n                        type=\"text\"\n                        name=\"education\"\n                        value={vac.education}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"education\">Введите образование</label>\n                </div>\n                <div className=\"card-action\">\n                    <button\n                        className=\"btn white black-text darken-4\"\n                        style={{marginRight: 10}}\n                        onClick={pressHead}\n                    >\n                        Enter\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","/home/alexander/WebstormProjects/HH/client/src/pages/AuthPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/FindPage.js",["112"],"import React, {useState,useCallback,useContext, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {useMessage} from \"../hooks/msg.hook\";\nexport const FindPage = () => {\n    const {error, request, clearError, result} = useHttp()\n    const history = useHistory()\n    const msg = useMessage()\n    useEffect(() =>{\n        msg(result)\n        msg(error)\n        clearError()\n    },[error, msg, clearError, result])\n    const auth = useContext(AuthContext)\n    const [vac, setVac] = useState(\n        {username: ''}\n    )\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n    const changeHead = event =>{\n        setVac({...vac, [event.target.name]: event.target.value})\n    }\n    const pressHead = async () => {\n        try {\n            const data = await request('/api/descr/find', 'POST', {...vac}, {\n                Authorization: `Bearer ${auth.token}`\n            })\n            history.push(`/detail/${data.username}`)\n        } catch (e) {\n        }\n    }\n    return (\n            <div className=\"row\">\n                <div className=\"col s8 offset-s2\">\n                    <div className=\"input-field\">\n                        <input\n                            placeholder=\"Введите имя пользователя\"\n                            id=\"username\"\n                            type=\"text\"\n                            name=\"username\"\n                            value={vac.username}\n                            onChange={changeHead}\n                        />\n                     <label htmlFor=\"username\">Введите имя пользователя</label>\n                    <div className=\"card-action\">\n                        <button\n                            className=\"btn white black-text darken-4\"\n                            style={{marginRight: 10}}\n                            onClick={pressHead}\n                        >\n                            Enter\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n        }\n","/home/alexander/WebstormProjects/HH/client/src/hooks/http.hook.js",[],"/home/alexander/WebstormProjects/HH/client/src/hooks/msg.hook.js",[],"/home/alexander/WebstormProjects/HH/client/src/hooks/auth.hook.js",[],"/home/alexander/WebstormProjects/HH/client/src/context/AuthContext.js",[],"/home/alexander/WebstormProjects/HH/client/src/components/Navbar.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/HomePage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/AboutPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/VacantionPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/components/NavNotAuth.js",[],"/home/alexander/WebstormProjects/HH/client/src/components/Loader.js",[],["113","114"],"/home/alexander/WebstormProjects/HH/client/src/components/State.js",[],"/home/alexander/WebstormProjects/HH/client/src/components/NewLoader.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/ChangePage.js",["115"],"import React, {useState, useEffect, useContext} from 'react'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {useMessage} from \"../hooks/msg.hook\";\n\nexport const ChangePage = () => {\n    const {loading, error, request, clearError} = useHttp()\n    const msg = useMessage()\n    useEffect(() =>{\n        msg(error)\n        clearError()\n    },[error, msg, clearError])\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n    const [form, setForm] = useState(\n        {email: '', password: ''}\n    )\n    const changeHead = event =>{\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    const registerHead = async () => {\n        try{\n            await request('/api/descr/change', 'POST', {...form})\n        } catch (e) {\n        }\n    }\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s6 offset-s3\">\n                <h1>Auth Page</h1>\n                <div className=\"card blue darken-1\">\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title\">Auth</span>\n                        <div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Input your email\"\n                                    id=\"email\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    className=\"red-input\"\n                                    value={form.email}\n                                    onChange={changeHead}\n                                />\n                                <label htmlFor=\"email\">Email</label>\n                            </div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Input your password\"\n                                    id=\"password\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"red-input\"\n                                    value={form.password}\n                                    onChange={changeHead}\n                                />\n                                <label htmlFor=\"password\">Password</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-action\">\n                        <button\n                            className=\"btn white black-text\"\n                            onClick={registerHead}\n                            disabled={loading}\n                        >\n                            Register\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","/home/alexander/WebstormProjects/HH/client/src/pages/InfoPage.js",["116"],"import React, {useState, useEffect, useContext} from 'react'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {useMessage} from \"../hooks/msg.hook\";\n\nexport const InfoPage = () => {\n    const {loading, error, request, clearError, result} = useHttp()\n    const msg = useMessage()\n    useEffect(() =>{\n        msg(result)\n        msg(error)\n        clearError()\n    },[error, msg, clearError, result])\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n    const [form, setForm] = useState(\n        {username: '',prof: '',exp: '', phone: '', education: '', rate: ''}\n    )\n    const changeHead = event =>{\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    const registerHead = async () => {\n        try{\n            await request('/api/descr/info', 'POST', {...form})\n        } catch (e) {\n        }\n    }\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\">\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите имя пользователя\"\n                        id=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        value={form.username}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"username\">Введите имя пользователя</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите род деятельности\"\n                        id=\"prof\"\n                        type=\"text\"\n                        name=\"prof\"\n                        value={form.prof}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"prof\">Введите профессию</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите описание\"\n                        id=\"exp\"\n                        type=\"text\"\n                        name=\"exp\"\n                        value={form.exp}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"exp\">Введите описание</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите номер телефона\"\n                        id=\"phone\"\n                        type=\"text\"\n                        name=\"phone\"\n                        value={form.phone}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"phone\">Введите номер телефона</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите образование\"\n                        id=\"education\"\n                        type=\"text\"\n                        name=\"education\"\n                        value={form.education}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"education\">Введите образование</label>\n                </div>\n                <div className=\"card-action\">\n                    <button\n                        className=\"btn white black-text\"\n                        onClick={registerHead}\n                        disabled={loading}\n                    >\n                        Enter\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}","/home/alexander/WebstormProjects/HH/client/src/pages/DetailPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/ChooseProf.js",["117","118"],"import React, {useState,useCallback,useContext, useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {State} from \"../components/State\";\nimport {NewLoader} from \"../components/NewLoader\";\nexport const ChooseProf = () => {\n    const [vac, setVac] = useState(null)\n    const {request, loading} = useHttp()\n    const vacs = useParams().prof\n\n    const getUser = useCallback(async () => {\n        try{\n            const fetched = await request(`/api/done/${vacs}`, 'GET', null)\n\n            //setVac(fetched[0])\n            setVac(fetched)\n        } catch (e) {\n        }\n    },[request, vacs])\n    useEffect(() => {\n        getUser()\n    }, [getUser])\n    if (loading) {\n        return <State />\n    }\n\n    //return (\n      //  <>\n        //    { !loading && vac && <Loader vace={vac} />}\n        //</>\n    //)\n    return (\n        <>\n            { !loading && vac && <NewLoader vace={vac} />}\n        </>\n    )\n}","/home/alexander/WebstormProjects/HH/client/src/pages/ProfessorPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/RatingPage.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":27,"column":19,"nodeType":"125","messageId":"126","endLine":27,"endColumn":23},{"ruleId":"123","severity":1,"message":"127","line":1,"column":25,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"119","replacedBy":"128"},{"ruleId":"121","replacedBy":"129"},{"ruleId":"123","severity":1,"message":"130","line":1,"column":37,"nodeType":"125","messageId":"126","endLine":1,"endColumn":47},{"ruleId":"123","severity":1,"message":"130","line":1,"column":37,"nodeType":"125","messageId":"126","endLine":1,"endColumn":47},{"ruleId":"123","severity":1,"message":"130","line":1,"column":37,"nodeType":"125","messageId":"126","endLine":1,"endColumn":47},{"ruleId":"123","severity":1,"message":"131","line":4,"column":9,"nodeType":"125","messageId":"126","endLine":4,"endColumn":20},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'useCallback' is defined but never used.",["132"],["133"],"'useContext' is defined but never used.","'AuthContext' is defined but never used.","no-global-assign","no-unsafe-negation"]