[{"/home/alexander/WebstormProjects/HH/client/src/index.js":"1","/home/alexander/WebstormProjects/HH/client/src/App.js":"2","/home/alexander/WebstormProjects/HH/client/src/reportWebVitals.js":"3","/home/alexander/WebstormProjects/HH/client/src/routes.js":"4","/home/alexander/WebstormProjects/HH/client/src/pages/DescriptionPage.js":"5","/home/alexander/WebstormProjects/HH/client/src/pages/AuthPage.js":"6","/home/alexander/WebstormProjects/HH/client/src/pages/FindPage.js":"7","/home/alexander/WebstormProjects/HH/client/src/hooks/http.hook.js":"8","/home/alexander/WebstormProjects/HH/client/src/hooks/msg.hook.js":"9","/home/alexander/WebstormProjects/HH/client/src/hooks/auth.hook.js":"10","/home/alexander/WebstormProjects/HH/client/src/context/AuthContext.js":"11","/home/alexander/WebstormProjects/HH/client/src/components/Navbar.js":"12","/home/alexander/WebstormProjects/HH/client/src/pages/HomePage.js":"13","/home/alexander/WebstormProjects/HH/client/src/pages/AboutPage.js":"14","/home/alexander/WebstormProjects/HH/client/src/pages/VacantionPage.js":"15","/home/alexander/WebstormProjects/HH/client/src/components/NavNotAuth.js":"16","/home/alexander/WebstormProjects/HH/client/src/components/Loader.js":"17","/home/alexander/WebstormProjects/HH/client/src/components/State.js":"18","/home/alexander/WebstormProjects/HH/client/src/components/NewLoader.js":"19","/home/alexander/WebstormProjects/HH/client/src/pages/ChangePage.js":"20","/home/alexander/WebstormProjects/HH/client/src/pages/InfoPage.js":"21","/home/alexander/WebstormProjects/HH/client/src/pages/DetailPage.js":"22","/home/alexander/WebstormProjects/HH/client/src/pages/ChooseProf.js":"23","/home/alexander/WebstormProjects/HH/client/src/pages/ProfessorPage.js":"24","/home/alexander/WebstormProjects/HH/client/src/pages/RatingPage.js":"25","/home/alexander/WebstormProjects/HH/client/src/pages/HomePageForAuth.js":"26","/home/alexander/WebstormProjects/HH/client/src/pages/CreateCompanyPage.js":"27","/home/alexander/WebstormProjects/HH/client/src/pages/AllCompanyPage.js":"28","/home/alexander/WebstormProjects/HH/client/src/components/NewLoaderForCompanies.js":"29","/home/alexander/WebstormProjects/HH/client/src/pages/ReformateCompanyDescr.js":"30","/home/alexander/WebstormProjects/HH/client/src/pages/FindyourCompany.js":"31","/home/alexander/WebstormProjects/HH/client/src/pages/InfoAboutYourComp.js":"32","/home/alexander/WebstormProjects/HH/client/src/pages/DeleteCompany.js":"33","/home/alexander/WebstormProjects/HH/client/src/pages/DeleteVac.js":"34"},{"size":500,"mtime":1607422960211,"results":"35","hashOfConfig":"36"},{"size":1011,"mtime":1607470877411,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1607422960211,"results":"38","hashOfConfig":"36"},{"size":4115,"mtime":1608547764387,"results":"39","hashOfConfig":"36"},{"size":3915,"mtime":1607588397573,"results":"40","hashOfConfig":"36"},{"size":3780,"mtime":1607589800862,"results":"41","hashOfConfig":"36"},{"size":2170,"mtime":1608542875812,"results":"42","hashOfConfig":"36"},{"size":1088,"mtime":1607533811564,"results":"43","hashOfConfig":"36"},{"size":195,"mtime":1607432100161,"results":"44","hashOfConfig":"36"},{"size":880,"mtime":1608016562906,"results":"45","hashOfConfig":"36"},{"size":195,"mtime":1607436710652,"results":"46","hashOfConfig":"36"},{"size":1446,"mtime":1608547764411,"results":"47","hashOfConfig":"36"},{"size":515,"mtime":1608544201543,"results":"48","hashOfConfig":"36"},{"size":187,"mtime":1608017115391,"results":"49","hashOfConfig":"36"},{"size":746,"mtime":1607585886596,"results":"50","hashOfConfig":"36"},{"size":822,"mtime":1607588708123,"results":"51","hashOfConfig":"36"},{"size":1360,"mtime":1607585886604,"results":"52","hashOfConfig":"36"},{"size":588,"mtime":1608018339636,"results":"53","hashOfConfig":"36"},{"size":1543,"mtime":1607585886628,"results":"54","hashOfConfig":"36"},{"size":3066,"mtime":1607504652489,"results":"55","hashOfConfig":"36"},{"size":3744,"mtime":1608561132202,"results":"56","hashOfConfig":"36"},{"size":1002,"mtime":1607585886572,"results":"57","hashOfConfig":"36"},{"size":964,"mtime":1608536502725,"results":"58","hashOfConfig":"36"},{"size":1914,"mtime":1608542867627,"results":"59","hashOfConfig":"36"},{"size":2325,"mtime":1607588879672,"results":"60","hashOfConfig":"36"},{"size":995,"mtime":1608545900215,"results":"61","hashOfConfig":"36"},{"size":4016,"mtime":1608546313111,"results":"62","hashOfConfig":"36"},{"size":800,"mtime":1608539272723,"results":"63","hashOfConfig":"36"},{"size":1412,"mtime":1608539272715,"results":"64","hashOfConfig":"36"},{"size":2842,"mtime":1608546313143,"results":"65","hashOfConfig":"36"},{"size":2078,"mtime":1608543210542,"results":"66","hashOfConfig":"36"},{"size":1026,"mtime":1608543049601,"results":"67","hashOfConfig":"36"},{"size":2348,"mtime":1608547977515,"results":"68","hashOfConfig":"36"},{"size":1763,"mtime":1608548075436,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"19k5jfx",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},"/home/alexander/WebstormProjects/HH/client/src/index.js",[],["146","147"],"/home/alexander/WebstormProjects/HH/client/src/App.js",[],"/home/alexander/WebstormProjects/HH/client/src/reportWebVitals.js",[],"/home/alexander/WebstormProjects/HH/client/src/routes.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/DescriptionPage.js",["148"],"import React, {useState, useEffect, useContext} from 'react'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {useMessage} from \"../hooks/msg.hook\";\n\nexport const DescriptionPage = () => {\n    const {error, request, clearError, result} = useHttp()\n    const msg = useMessage()\n    useEffect(() =>{\n        msg(result)\n        msg(error)\n        clearError()\n    },[error, msg, clearError, result])\n    const auth = useContext(AuthContext)\n    const [vac, setVac] = useState(\n        {username: '',prof: '', exp: '', phone: '', education: '', rate: ''}\n    )\n\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n    const changeHead = event =>{\n        setVac({...vac, [event.target.name]: event.target.value})\n    }\n    const pressHead = async () => {\n        try {\n            const data = await request('/api/descr/exp', 'POST', {...vac}, {\n                Authorization: `Bearer ${auth.token}`\n            })\n        } catch (e) {\n        }\n    }\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\">\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите имя пользователя\"\n                        id=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        value={vac.username}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"username\">Введите имя пользователя</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите описание\"\n                        id=\"prof\"\n                        type=\"text\"\n                        name=\"prof\"\n                        value={vac.prof}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"prof\">Введите профессию</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите описание\"\n                        id=\"exp\"\n                        type=\"text\"\n                        name=\"exp\"\n                        value={vac.exp}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"exp\">Введите описание</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите номер телефона\"\n                        id=\"phone\"\n                        type=\"text\"\n                        name=\"phone\"\n                        value={vac.phone}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"phone\">Введите номер телефона</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите образование\"\n                        id=\"education\"\n                        type=\"text\"\n                        name=\"education\"\n                        value={vac.education}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"education\">Введите образование</label>\n                </div>\n                <div className=\"card-action\">\n                    <button\n                        className=\"btn white black-text darken-4\"\n                        style={{marginRight: 10}}\n                        onClick={pressHead}\n                    >\n                        Enter\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","/home/alexander/WebstormProjects/HH/client/src/pages/AuthPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/FindPage.js",["149"],"import React, {useState,useCallback,useContext, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {useMessage} from \"../hooks/msg.hook\";\nexport const FindPage = () => {\n    const {error, request, clearError, result} = useHttp()\n    const history = useHistory()\n    const msg = useMessage()\n    useEffect(() =>{\n        msg(result)\n        msg(error)\n        clearError()\n    },[error, msg, clearError, result])\n    const auth = useContext(AuthContext)\n    const [vac, setVac] = useState(\n        {username: ''}\n    )\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n    const changeHead = event =>{\n        setVac({...vac, [event.target.name]: event.target.value})\n    }\n    const pressHead = async () => {\n        try {\n            const data = await request('/api/descr/find', 'POST', {...vac}, {\n                Authorization: `Bearer ${auth.token}`\n            })\n            history.push(`/detail/${data.username}`)\n        } catch (e) {\n        }\n    }\n    return (\n            <div className=\"row\">\n                <div className=\"col s8 offset-s2\">\n                    <div className=\"input-field\">\n                        <input\n                            placeholder=\"Введите имя пользователя\"\n                            id=\"username\"\n                            type=\"text\"\n                            name=\"username\"\n                            value={vac.username}\n                            onChange={changeHead}\n                        />\n                     <label htmlFor=\"username\">Введите имя пользователя</label>\n                    <div className=\"card-action\">\n                        <button\n                            className=\"btn white black-text darken-4\"\n                            style={{marginRight: 10}}\n                            onClick={pressHead}\n                        >\n                            Enter\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n        }\n","/home/alexander/WebstormProjects/HH/client/src/hooks/http.hook.js",[],"/home/alexander/WebstormProjects/HH/client/src/hooks/msg.hook.js",[],"/home/alexander/WebstormProjects/HH/client/src/hooks/auth.hook.js",[],"/home/alexander/WebstormProjects/HH/client/src/context/AuthContext.js",[],"/home/alexander/WebstormProjects/HH/client/src/components/Navbar.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/HomePage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/AboutPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/VacantionPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/components/NavNotAuth.js",[],"/home/alexander/WebstormProjects/HH/client/src/components/Loader.js",[],"/home/alexander/WebstormProjects/HH/client/src/components/State.js",[],"/home/alexander/WebstormProjects/HH/client/src/components/NewLoader.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/ChangePage.js",["150"],"import React, {useState, useEffect, useContext} from 'react'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {useMessage} from \"../hooks/msg.hook\";\n\nexport const ChangePage = () => {\n    const {loading, error, request, clearError} = useHttp()\n    const msg = useMessage()\n    useEffect(() =>{\n        msg(error)\n        clearError()\n    },[error, msg, clearError])\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n    const [form, setForm] = useState(\n        {email: '', password: ''}\n    )\n    const changeHead = event =>{\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    const registerHead = async () => {\n        try{\n            await request('/api/descr/change', 'POST', {...form})\n        } catch (e) {\n        }\n    }\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s6 offset-s3\">\n                <h1>Изменить пароль</h1>\n                <p>Если ошибка не выдается, значит пароль был заменен успешно</p>\n                <div className=\"card blue darken-1\">\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title\">Форма ввода</span>\n                        <div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Введите ваш email\"\n                                    id=\"email\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    className=\"red-input\"\n                                    value={form.email}\n                                    onChange={changeHead}\n                                />\n                                <label htmlFor=\"email\">Email</label>\n                            </div>\n                            <div className=\"input-field\">\n                                <input\n                                    placeholder=\"Введите новый пароль\"\n                                    id=\"password\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"red-input\"\n                                    value={form.password}\n                                    onChange={changeHead}\n                                />\n                                <label htmlFor=\"password\">Password</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-action\">\n                        <button\n                            className=\"btn white black-text\"\n                            onClick={registerHead}\n                            disabled={loading}\n                        >\n                            Change password\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","/home/alexander/WebstormProjects/HH/client/src/pages/InfoPage.js",["151"],"/home/alexander/WebstormProjects/HH/client/src/pages/DetailPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/ChooseProf.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/ProfessorPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/RatingPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/HomePageForAuth.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/CreateCompanyPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/AllCompanyPage.js",[],"/home/alexander/WebstormProjects/HH/client/src/components/NewLoaderForCompanies.js",[],["152","153"],"/home/alexander/WebstormProjects/HH/client/src/pages/ReformateCompanyDescr.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/FindyourCompany.js",["154"],"import React, {useState,useCallback,useContext, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {useMessage} from \"../hooks/msg.hook\";\nexport const FindyourCompany = () => {\n    const {error, request, clearError, result} = useHttp()\n    const history = useHistory()\n    const msg = useMessage()\n    useEffect(() =>{\n        msg(result)\n        msg(error)\n        clearError()\n    },[error, msg, clearError, result])\n    const auth = useContext(AuthContext)\n    const [comp, setComp] = useState(\n        {compname: ''}\n    )\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n    const changeHead = event =>{\n        setComp({...comp, [event.target.name]: event.target.value})\n    }\n    const pressHead = async () => {\n        try {\n            const data = await request('/api/comp/findCompany', 'POST', {...comp}, {\n                Authorization: `Bearer ${auth.token}`\n            })\n            history.push(`/greatComp/${data.compname}`)\n        } catch (e) {\n        }\n    }\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\">\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите имя компании\"\n                        id=\"compname\"\n                        type=\"text\"\n                        name=\"compname\"\n                        value={comp.compname}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"compname\">Введите имя компании</label>\n                    <div className=\"card-action\">\n                        <button\n                            className=\"btn white black-text darken-4\"\n                            onClick={pressHead}\n                        >\n                            Нажмите\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/alexander/WebstormProjects/HH/client/src/pages/InfoAboutYourComp.js",[],"/home/alexander/WebstormProjects/HH/client/src/pages/DeleteCompany.js",["155"],"import React, {useState, useEffect, useContext} from 'react'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {useMessage} from \"../hooks/msg.hook\";\n\nexport const DeleteCompany = () => {\n    const { error, request, clearError, result} = useHttp()\n    const msg = useMessage()\n    useEffect(() =>{\n        msg(result)\n        msg(error)\n        clearError()\n    },[error, msg, clearError, result])\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n    const [form, setForm] = useState(\n        {compname: '', description: ''}\n    )\n    const changeHead = event =>{\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    const registerHead = async () => {\n        try{\n            await request('/api/comp/deleteCompany', 'POST', {...form})\n        } catch (e) {\n        }\n    }\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\">\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите название компании\"\n                        id=\"compname\"\n                        type=\"text\"\n                        name=\"compname\"\n                        value={form.compname}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"compname\">Название компании</label>\n                </div>\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите место расположения\"\n                        id=\"description\"\n                        type=\"text\"\n                        name=\"description\"\n                        value={form.description}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"description\">Введите место расположения</label>\n                </div>\n                <div className=\"card-action\">\n                    <button\n                        className=\"btn white black-text darken-4\"\n                        style={{marginRight: 10}}\n                        onClick={registerHead}\n                    >\n                        Опубликовать\n                    </button>\n                </div>\n            </div>\n        </div>\n\n    )\n}","/home/alexander/WebstormProjects/HH/client/src/pages/DeleteVac.js",["156"],"import React, {useState, useEffect, useContext} from 'react'\nimport {useHttp} from \"../hooks/http.hook\";\nimport {useMessage} from \"../hooks/msg.hook\";\n\nexport const DeleteVac = () => {\n    const { error, request, clearError, result} = useHttp()\n    const msg = useMessage()\n    useEffect(() =>{\n        msg(result)\n        msg(error)\n        clearError()\n    },[error, msg, clearError, result])\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n    const [form, setForm] = useState(\n        {username: ''}\n    )\n\n    const changeHead = event =>{\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    const registerHead = async () => {\n        try{\n            await request('/api/descr/deleteVac', 'POST', {...form})\n        } catch (e) {\n        }\n    }\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\">\n                <div className=\"input-field\">\n                    <input\n                        placeholder=\"Введите свое имя\"\n                        id=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        value={form.username}\n                        onChange={changeHead}\n                    />\n                    <label htmlFor=\"username\">Введите свое имя</label>\n                </div>\n                <div className=\"card-action\">\n                    <button\n                        className=\"btn white black-text darken-4\"\n                        style={{marginRight: 10}}\n                        onClick={registerHead}\n                    >\n                        Удалить\n                    </button>\n                </div>\n            </div>\n        </div>\n\n    )\n}",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":27,"column":19,"nodeType":"163","messageId":"164","endLine":27,"endColumn":23},{"ruleId":"161","severity":1,"message":"165","line":1,"column":25,"nodeType":"163","messageId":"164","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"166","line":1,"column":37,"nodeType":"163","messageId":"164","endLine":1,"endColumn":47},{"ruleId":"161","severity":1,"message":"166","line":1,"column":37,"nodeType":"163","messageId":"164","endLine":1,"endColumn":47},{"ruleId":"157","replacedBy":"167"},{"ruleId":"159","replacedBy":"168"},{"ruleId":"161","severity":1,"message":"165","line":1,"column":25,"nodeType":"163","messageId":"164","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"166","line":1,"column":37,"nodeType":"163","messageId":"164","endLine":1,"endColumn":47},{"ruleId":"161","severity":1,"message":"166","line":1,"column":37,"nodeType":"163","messageId":"164","endLine":1,"endColumn":47},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'useContext' is defined but never used.",["169"],["170"],"no-global-assign","no-unsafe-negation"]